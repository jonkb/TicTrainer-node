<!DOCTYPE html>
<html lang="en-us">
	<head>
		<title>TicTrainer Session: Trainer</title>
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<link rel="stylesheet" type="text/css" href="/stylesheets/bgStyle.css">
	</head>
	<body>
    <section class="page-header">
			<div class="header-navbar">
				<a href="/" class="logo"></a>
				<h1>TicTrainer Session: Trainer</h1>
				<div style="clear: both;"></div>
			</div>
    </section>
    <section class="main-content">
			<div id='tr_btns'>
				<button type='button' class='bigBtn' id='ticBtn'>Tic Detected</button><br>
				<button type='button' class='bigBtn' id='endBtn'>End Session</button>
			</div>
			
			<div id='paying_attention'>
				<div style="float:right; margin:0;">
					<div id='here_btn' class='btn' style="white-space:nowrap; margin: 0;">
						I'm Here
					</div>
				</div>
				<div style="height:100%; overflow:hidden;">
					<div id='animation' style='height:100%; width:100%; float:right; background-color:#808080;'></div>
				</div>
			</div>
			
    </section>
		<script>
			//Change the URL bar
			window.history.pushState("", "Session: Trainer", "/session/session-trainer.dynh");
			
			var already_left = false;
			window.onbeforeunload = endS;
			window.onpagehide = endS;
			document.addEventListener('visibilitychange', function(){if(document.hidden){endS();}}, false);
			
			document.getElementById('ticBtn').addEventListener('click', tic);
			document.getElementById('endBtn').addEventListener('click', endS);
			document.getElementById('here_btn').addEventListener('click', here);
			var anim_bar = document.getElementById('animation');
			var tTotal = 60;
			var tLeft = 60;
			
			setInterval(progress, 1000);
			
			function set_anim_wid(width){
				var color = '808080';
				if(width < 18)
					color = 'FF0000';
				anim_bar.setAttribute('style', 'height:100%; float:right; background-color:#'+color+'; width:'+width+'%;');
			}
			function progress(){
				if(tLeft > 0){
					tLeft -= 1;
					var width = 100 * tLeft / tTotal;
					set_anim_wid(width);
				}
				else{
					endS();
				}
			}
			function here(){
				tLeft = tTotal;
				set_anim_wid(100);
			}
		  function tic(){
				here();
				var xhr = new XMLHttpRequest();
				var url = '/session/session-trainer.dynh';
				var reqBody = '&id=**[id]**&lid=**[lid]**&reqType=tic';
				xhr.onreadystatechange = function(){
					if(xhr.readyState == 4){//just check that everything is fine
						var response = xhr.responseText;
						if(xhr.status != 200){//Error
							document.open();
							document.write(response);
							document.close();
						}
						else{
							if(response != 'good'){//end page
								document.open();
								document.write(response);
								document.close();
							}
						}
					}
				};
				xhr.open('POST', url, true);
				xhr.send(reqBody);
		  }
		  function endS(){
				if(!already_left){
					var xhr = new XMLHttpRequest();
					var url = '/session/session-trainer.dynh';
					var reqBody = 'id=**[id]**&lid=**[lid]**&reqType=end';
					xhr.onreadystatechange = function(){
						if(xhr.readyState == 4){//just check that everything is fine
							var response = xhr.responseText;
							document.open();
							document.write(response);
							document.close();
						}
					};
					xhr.open('POST', url, true);
					xhr.send(reqBody);
					already_left = true;
				}
		  }
		</script>
	</body>
</html>