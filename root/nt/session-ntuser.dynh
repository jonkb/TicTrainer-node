<!DOCTYPE html>
<html lang="en-us">
	<head>
		<title>NewTics Session: User</title>
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<link rel="stylesheet" type="text/css" href="/stylesheets/bgStyle.css">
	</head>
	<body>
    <section class="page-header">
			<div class="header-navbar">
				<a href="/" class="logo"></a>
				<h1>NewTics Session: User</h1>
				<div style="clear: both;"></div>
			</div>
    </section>
    <section class="main-content">
			
			<div style="font-size: 2em;"> <!-- word-wrap: break-word;-->
			Reward Tokens:<br>
			<div id="tokens">
				
			</div>
			</div>
			
    </section>
		<script>
			//Change the URL bar
			var url = "/nt/session-ntuser.dynh";
			if(window.history.pushState)
				window.history.pushState("", "NewTics Session: User", url);
			
			var already_left = false;
			window.onbeforeunload = endS;
			window.onpagehide = endS;
			
			//stype is one of: "baseline", "verbal", "DRZ", "NCR"
			var reward_scheme = "**[stype]**";
			//alert("This should be a "+reward_scheme+" session");
			
			const ms_per_reward = 10*1000;
			var lag_adjust = 0;//SEE trip time below
			const session_length = 5*60*1000;
			const token_HTML = "\u2B50 "
			
			//Last recorded length of the session file. Used to determine if the file has changed.
			var lastL = **[sesL]**;
			var timed_check = null;
			
			start();
			
			function start(){
				var timesent = Date.now();
				var xhr = new XMLHttpRequest();
				var reqBody = 'reqType=start&id=**[id]**';
				xhr.open('POST', url, true);
				xhr.setRequestHeader('Content-type', 'text/plain');
				xhr.onreadystatechange = function(){
					if(xhr.readyState == 4){
						if(xhr.status == 200){
							lag_adjust = Date.now() - timesent;
							var since_start = xhr.responseText
							if(reward_scheme == "DRZ")
								//May fall a bit early...
								timed_check = setTimeout(check_for_tic, ms_interval() - since_start);
							if(session_length != null)
								setTimeout(endS, session_length - since_start)
						}
						else{//For an Error Page
							var response = xhr.responseText;
							document.open();
							document.write(response);
							document.close();
						}//ERROR
					}
				};
				xhr.send(reqBody);
			}
			
			function ms_interval(){
				return ms_per_reward - lag_adjust;
			}
			
			function check_for_tic(){
				var timesent = Date.now();
				var xhr = new XMLHttpRequest();
				var reqBody = 'reqType=check&id=**[id]**&sesL='+lastL+'&msi='+ms_per_reward;
				xhr.open('POST', url, true);
				xhr.setRequestHeader('Content-type', 'text/plain');
				xhr.onreadystatechange = function(){
					if(xhr.readyState == 4){
						if(xhr.status == 200){
							if(xhr.responseText == "end"){
								endS();
								return;
							}
							lag_adjust = Date.now() - timesent;
							var fields = xhr.responseText.split('&');
							lastL = fields[0];
							if(fields.indexOf("reward") != -1){
								send_reward();
								return;
							}
							for(f in fields){
								if(fields[f].indexOf("wait:") != -1){
									var time_left = parseInt(fields[f].slice(fields[f].indexOf(':')+1));
									//alert("75: "+time_left);
									timed_check = setTimeout(check_for_tic, time_left - lag_adjust);
									break;
								}
							}
						}
						else{//For an Error Page
							var response = xhr.responseText;
							document.open();
							document.write(response);
							document.close();
						}//ERROR
					}
				};
				xhr.send(reqBody);
			}
			
			function send_reward(){
				timed_check = setTimeout(check_for_tic, ms_interval());
				//It's already been logged in the session file.
				document.getElementById('tokens').innerHTML += token_HTML;
			}
			
			function endS(){
				if(!already_left){
					if(timed_check){
						clearTimeout(timed_check)
					}
					var xhr = new XMLHttpRequest();
					var reqBody = 'reqType=end&id=**[id]**&pw=**[pw]**&lid=a';
					xhr.open('POST', url, true);
					xhr.onreadystatechange = function(){
						if(xhr.readyState == 4){
							var response = xhr.responseText;
							document.open();
							document.write(response);
							document.close();
						}
					}
					xhr.send(reqBody);
					already_left = true;
				}
			}
		</script>
	</body>
</html>