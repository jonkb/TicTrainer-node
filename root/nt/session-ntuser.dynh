<!DOCTYPE html>
<html lang="en-us">
	<head>
		<title>NewTics Session: User</title>
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<link rel="stylesheet" type="text/css" href="/stylesheets/bgStyle.css">
	</head>
	<body>
    <section class="page-header">
			<div class="header-navbar">
				<a href="/" class="logo"></a>
				<h1>NewTics Session: User</h1>
				<div style="clear: both;"></div>
			</div>
    </section>
    <section class="main-content">
			<p id="top_lbl" class="med_lbl" style="text-align: center;"></p>
			<div id="tokens_lbl" class="med_lbl"></div>
			<div id="tokens" style="font-size: 2em;"></div>
			
    </section>
		<script src="/scripts/req_settings.js"></script>
		<script>
			var token_HTML = "<img src='/media/coin.svg' alt='\u2B50 ' height='40px' style='margin:0.3rem'>"
			var bell_audio = new Audio('/media/bike-bell.mp3');
			var token_box = document.getElementById('tokens');
			var already_left = false;
			
			//Change the URL bar
			var url = "/nt/session-ntuser.dynh";
			if(window.history.pushState)
				window.history.pushState("", "NewTics Session: User", url);
			
			window.onload = init;
			window.onbeforeunload = endS;
			window.onpagehide = endS;
			
			var ses_vars = {
				//stype is one of: "baseline", "verbal", "DRZ", "NCR"
				"reward_scheme" : "**[stype]**",
				"ms_per_reward" : 10*1000,
				"session_length" : 5*60*1000,
				"timed_check" : null,
				"end_timer" : null,
				"ncr_timers" : [],
				"lag_adjust" : 0,
				"lbl_bgc" : null
			}
			
			function init(){
				req_settings(function(code, res){
					if(code == 200){
						ses_vars.lbl_bgc = res.nts_lbl_bgc;
						start();
					}
					else{
						cleanup();
						document.open();
						document.write(res);
						document.close();
					}
				});
			}
			
			function start(){
				var top_lbl = document.getElementById("top_lbl");
				var tokens_lbl = document.getElementById("tokens_lbl");
				if(ses_vars.reward_scheme == "baseline"){
					top_lbl.innerHTML = "OK to tic";
					if(ses_vars.lbl_bgc)
						top_lbl.style.backgroundColor = "#6f6";
				}
				else{
					top_lbl.innerHTML = "Don't tic";
					if(ses_vars.lbl_bgc)
						top_lbl.style.backgroundColor = "#f66";
				}
				if(ses_vars.reward_scheme == "DRZ" || ses_vars.reward_scheme == "NCR"){
					tokens_lbl.innerHTML = "Reward Tokens:";
				}
				var timesent = Date.now();
				var xhr = new XMLHttpRequest();
				var reqBody = 'reqType=start&id=**[id]**';
				xhr.open('POST', url, true);
				xhr.setRequestHeader('Content-type', 'text/plain');
				xhr.onreadystatechange = function(){
					if(xhr.readyState == 4){
						if(xhr.status == 200){
							//alert(xhr.responseText);
							ses_vars.lag_adjust = Date.now() - timesent;
							if(ses_vars.reward_scheme == "NCR"){
								let res_parts = xhr.responseText.split("&");
								var since_start = res_parts[0];
								let rew_times = res_parts[1].split(",");
								for(t of rew_times){
									let t_i = parseInt(t)-since_start-ses_vars.lag_adjust/2;
									ses_vars.ncr_timers.push(setTimeout(ncr_rew, t_i));
								}
							}
							else{
								var since_start = xhr.responseText;
								if(ses_vars.reward_scheme == "DRZ"){
									ses_vars.timed_check = setTimeout(check_for_tic, 
										ses_vars.ms_per_reward - ses_vars.lag_adjust - since_start);
								}
							}
							if(ses_vars.session_length != null)
								ses_vars.end_timer = setTimeout(endS, ses_vars.session_length - since_start);
						}
						else{//For an Error Page
							cleanup();
							var response = xhr.responseText;
							document.open();
							document.write(response);
							document.close();
						}//ERROR
					}
				};
				xhr.send(reqBody);
			}
			
			function ncr_rew(){
				//Send reward. Also log in session file?
				var xhr = new XMLHttpRequest();
				var reqBody = 'reqType=logrew&id=**[id]**&lid=**[lid]**';
				xhr.open('POST', url, true);
				xhr.onreadystatechange = function(){
					if(xhr.readyState == 4){
						if(xhr.status != 200){//Display Error Page
							cleanup();
							var response = xhr.responseText;
							document.open();
							document.write(response);
							document.close();
						}
					}
				}
				xhr.send(reqBody);
				token_box.innerHTML += token_HTML;
				bell_audio.play();
			}
			
			function check_for_tic(){
				var timesent = Date.now();
				var xhr = new XMLHttpRequest();
				var reqBody = 'reqType=check&id=**[id]**'+'&msi='+ses_vars.ms_per_reward;
				xhr.open('POST', url, true);
				xhr.setRequestHeader('Content-type', 'text/plain');
				xhr.onreadystatechange = function(){
					if(xhr.readyState == 4){
						if(xhr.status == 200){
							var res_txt = xhr.responseText;
							if(res_txt == "end"){
								endS();
								return;
							}
							ses_vars.lag_adjust = Date.now() - timesent;
							if(res_txt.indexOf("reward:") != -1){
								var to_next = parseInt(res_txt.slice(res_txt.indexOf(':')+1));
								send_reward(to_next);
								return;
							}
							if(res_txt.indexOf("wait:") != -1){
								var time_left = parseInt(res_txt.slice(res_txt.indexOf(':')+1));
								ses_vars.timed_check = setTimeout(check_for_tic, time_left - ses_vars.lag_adjust);
								return;
							}
						}
						else{//For an Error Page
							cleanup();
							var response = xhr.responseText;
							document.open();
							document.write(response);
							document.close();
						}//ERROR
					}
				};
				xhr.send(reqBody);
			}
			
			function send_reward(to_next){
				ses_vars.timed_check = setTimeout(check_for_tic, to_next - ses_vars.lag_adjust);
				//It's already been logged in the session file.
				token_box.innerHTML += token_HTML;
				bell_audio.play();
			}
			
			function cleanup(){
				if(ses_vars.end_timer)
					clearTimeout(ses_vars.end_timer);
				if(ses_vars.timed_check)
					clearTimeout(ses_vars.timed_check);
				if(ses_vars.ncr_timers.length > 0){
					for(t of ses_vars.ncr_timers){
						clearTimeout(t);
					}
				}
				ses_vars = {};
			}
			
			function endS(){
				if(!already_left){
					cleanup();
					var xhr = new XMLHttpRequest();
					var reqBody = 'reqType=end&id=**[id]**&lid=a';
					xhr.open('POST', url, true);
					xhr.onreadystatechange = function(){
						if(xhr.readyState == 4){
							var response = xhr.responseText;
							document.open();
							document.write(response);
							document.close();
						}
					}
					xhr.send(reqBody);
					already_left = true;
				}
			}
		</script>
	</body>
</html>