<!DOCTYPE html>
<html lang="en-us">
	<head>
		<title>NewTics Session: Rater</title>
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<link rel="stylesheet" type="text/css" href="/stylesheets/bgStyle.css">
	</head>
	<body>
    <section class="page-header">
			<div class="header-navbar">
				<a href="/" class="logo"></a>
				<h1>NewTics Session: Rater</h1>
				<div style="clear: both;"></div>
			</div>
    </section>
    <section class="main-content">
		
			<div id='tr_btns'>
				<button type='button' class='bigBtn' id='ticBtn'>Tic Detected</button><br>
				<button type='button' class='bigBtn' id='endBtn'>End Session</button>
			</div>
			<div style='padding: 1rem 0 0 10%;'>
				Approximate Session Clock:
				<div style='padding: 0 0 0 5%;' class='medCounter' id='clock'>
					00:00
				</div>
			</div>
			<div style='margin: 1rem 10% 0 10%;'>
				Tic Log:
				<div style='margin: 0 5% 0 5%; overflow:auto; height:6em' id='tic_log'>
				</div>
			</div>
			
    </section>
		<script>
			//Change the URL bar
			var url = '/nt/session-rater.dynh';
			window.history.pushState("", "NewTics Session: Rater", url);
			
			var already_left = false;
			window.onbeforeunload = endS;
			window.onpagehide = endS;
			
			document.getElementById('ticBtn').addEventListener('click', tic);
			document.getElementById('endBtn').addEventListener('click', endS);
			onkeydown = key_press;
			
			//Half a second later because the user's timer is more accurate.
			//We hope to rely on that one.
			const session_length = 5*60*1000;
			setTimeout(endS, session_length + 500);
			
			var session_time = 0;//in seconds
			var clock = document.getElementById('clock');
			var tic_log = document.getElementById('tic_log');
			setInterval(advance_clock, 1000);
			
			
			function key_press(event){
				var key = event.keyCode
				//32=SPACE; 84=T; 69=E
				if(key == 32 || key == 84){
					tic();
				}
				else if(key == 69){
					endS();
				}
			}
			function time_string(){
				var min = Math.floor(session_time / 60).toString().padStart(2,'0');
				var sec = ( session_time % 60 ).toString().padStart(2,'0');
				return min+":"+sec;
			}
			function advance_clock(){
				session_time++;
				clock.innerHTML = time_string();
			}
		  function tic(){
		    var xhr = new XMLHttpRequest();
				var reqBody = '&id=**[id]**&lid=**[lid]**&reqType=tic';
				xhr.onreadystatechange = function(){
					if(xhr.readyState == 4){//just check that everything is fine
						var response = xhr.responseText;
						if(xhr.status != 200){//Error
							document.open();
							document.write(response);
							document.close();
						}
						else{
							if(response != 'good'){//end page
								document.open();
								document.write(response);
								document.close();
							}
						}
					}
				};
				xhr.open('POST', url, true);
				xhr.send(reqBody);
				
				var tic_line = "Tic detected at "+time_string()+"<br>";
				tic_log.innerHTML = tic_line + tic_log.innerHTML;
		  }
		  function endS(){
				if(!already_left){
					var xhr = new XMLHttpRequest();
					var reqBody = 'id=**[id]**&lid=**[lid]**&reqType=end';
					xhr.onreadystatechange = function(){
						if(xhr.readyState == 4){//just check that everything is fine
							var response = xhr.responseText;
							document.open();
							document.write(response);
							document.close();
						}
					};
					xhr.open('POST', url, true);
					xhr.send(reqBody);
					already_left = true;
				}
		  }
		</script>
	</body>
</html>